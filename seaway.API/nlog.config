<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="D:\SeaWayHotel\seaway.API\Logs\Nlog.log">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->

		<!--<target xsi:type="File" name="allfile" fileName="D:\SeaWayHotel\seaway.API\LogFiles\WebAPI_${shortdate}.log"
				layout="${longdate}|${level}|${callsite}|${logger}|${threadid}|${windows-identity:domain=false}${message} ${exception:format=message,stacktrace:separator=" />  -->


		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<!--<target xsi:type="File" name="ownFile-web" fileName="c:\temp\WebApiFsp-own-${shortdate}.log"
           layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />-->
		<target xsi:type="File" name="logfile" fileName="D:\SeaWayHotel\seaway.API\Logs\log-${shortdate}.log" createDir="true">
			<layout xsi:type="JsonLayout" includeEventProperties="true">
				<attribute name="time" layout="${longdate}" />
				<attribute name="event" layout="${event-properties:item=EventId:whenEmpty=0}"/>
				<attribute name="level" layout="${level:upperCase=true}"/>
				<attribute name="logger" layout="${logger}"/>
				<attribute name="message" layout="${message}" />
				<attribute name="exception" layout="${exception:format=tostring}"/>
				<attribute name="url" layout="${aspnet-request-url}" />
				<attribute name="action" layout="${aspnet-mvc-action}" />
			</layout>
			
		</target>


		<target name="ownFile-web" xsi:type="File"  layout="${longdate}|${level}--${message}    ${exception:format=message,stacktrace:separator="
		fileName="D:\SeaWayHotel\seaway.API\LogFiles\trace_${shortdate}.log"
		  archiveNumbering="DateAndSequence"
			  archiveAboveSize="512000000"
			  maxArchiveFiles="1000"
		      createDir="true"
          />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile, ownFile-web, logfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web, logfile" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />
		<!-- <logger name="" minlevel="Trace" writeTo="ds" /> -->
		<logger name="*" minlevel="Info" writeTo="allfile, ownFile-web, logfile" />
		<logger name="*" minlevel="Error" writeTo="allfile, ownFile-web, logfile"/> 

	</rules>
</nlog>

